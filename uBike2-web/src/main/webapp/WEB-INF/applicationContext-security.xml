<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <context:component-scan base-package="com.ubike.rest.service"/>
    <global-method-security secured-annotations="enabled" access-decision-manager-ref="businessAccessDecisionManager" />

    <http auto-config="true" access-decision-manager-ref="accessDecisionManager" access-denied-page="/faces/403.jsf">
        <intercept-url pattern="/resources/**" access="ROLE_USER,ROLE_ADMIN" />
        <intercept-url pattern="/faces/private/**" access="ROLE_USER,ROLE_ADMIN" />
        <intercept-url pattern="/faces/upload.jsf*" access="ROLE_USER,ROLE_ADMIN" />
        <intercept-url pattern="/faces/createGroup.jsf*" access="ROLE_USER,ROLE_ADMIN" />

        <form-login login-page="/faces/login.jsf" default-target-url="/index.jsp" authentication-failure-url="/faces/login.jsf?error=1" />
        <logout logout-success-url="/faces/login.jsf" />
    </http>

    <authentication-manager alias="authenticationManager" />

    <beans:bean id="authVoter" class="org.springframework.security.vote.AuthenticatedVoter" />
    <beans:bean id="roleVoter" class="org.springframework.security.vote.RoleVoter"/>
    
    <beans:bean id="ubikeUsersVoter" class="com.ubike.rest.security.UbikeUsersVoter" />
    <beans:bean id="ubikeUserVoter" class="com.ubike.rest.security.UbikeUserVoter" />

    <beans:bean id="accountsVoter" class="com.ubike.rest.security.AccountsVoter" />
    <beans:bean id="accountVoter" class="com.ubike.rest.security.AccountVoter" />

    <beans:bean id="preferencessVoter" class="com.ubike.rest.security.PreferencessVoter" />
    <beans:bean id="preferencesVoter" class="com.ubike.rest.security.PreferencesVoter" />

    <beans:bean id="ubikeGroupsVoter" class="com.ubike.rest.security.UbikeGroupsVoter" />
    <beans:bean id="ubikeGroupVoter" class="com.ubike.rest.security.UbikeGroupVoter" />

    <beans:bean id="ubikeTripsVoter" class="com.ubike.rest.security.TripsVoter" />
    <beans:bean id="ubikeTripVoter" class="com.ubike.rest.security.TripVoter" />

    <beans:bean id="ubikeMemberShipsVoter" class="com.ubike.rest.security.MemberShipsVoter" />
    <beans:bean id="ubikeMemberShipVoter" class="com.ubike.rest.security.MemberShipVoter" />

    <beans:bean id="authenticationController" class="com.ubike.rest.security.AuthenticationController" scope="session">
        <beans:property name="authenticationManager">
            <beans:ref bean="authenticationManager"/>
        </beans:property>
    </beans:bean>

    <!-- Access Decision Managers -->
    <beans:bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <beans:property name="allowIfAllAbstainDecisions" value="false" />
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref local="authVoter"/>
                <beans:ref local="roleVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean id="businessAccessDecisionManager" class="org.springframework.security.vote.UnanimousBased">
        <beans:property name="allowIfAllAbstainDecisions" value="true" />
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref local="authVoter"/>
                <beans:ref local="roleVoter"/>
                <beans:ref local="ubikeUsersVoter"/>
                <beans:ref local="ubikeGroupsVoter"/>
                <beans:ref local="ubikeMemberShipsVoter"/>
                <beans:ref local="accountsVoter"/>
                <beans:ref local="preferencessVoter"/>
                <beans:ref local="ubikeTripsVoter"/>
                <beans:ref local="ubikeUserVoter"/>
                <beans:ref local="ubikeGroupVoter"/>
                <beans:ref local="ubikeTripVoter"/>
                <beans:ref local="ubikeMemberShipVoter"/>
                <beans:ref local="accountVoter"/>
                <beans:ref local="preferencesVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- AuthenticationProvider -->
    <authentication-provider>
        <password-encoder hash="sha" ref="passwordEncoder">
            <salt-source  user-property="username" />
        </password-encoder>
        <jdbc-user-service data-source-ref="dataSource"
                           users-by-username-query="SELECT username,password,enabled,salt FROM ACCOUNTS WHERE username = ?"
                           authorities-by-username-query="SELECT username,authority FROM AUTHORITIES WHERE username = ?"/>
    </authentication-provider>

    <beans:bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder">
        <beans:constructor-arg value="512"/>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    <!-- Data Source config -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
        <beans:property name="url" value="jdbc:derby://localhost:1527/uBike"/>
        <beans:property name="username" value="ubike"/>
        <beans:property name="password" value="bismillah"/>
    </beans:bean>
</beans:beans>
